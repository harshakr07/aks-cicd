name: Build and Push Docker Image to Azure ACR

on:
  push:
    branches:
      - main  # Adjust as needed

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up Java (assuming the project uses Java 11)
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'  # Add this line to specify Java distribution

    # Step 3: Build the JAR file using Maven (adjust if you use Gradle)
    - name: Build with Maven
      run: mvn clean package -DskipTests

    # Step 4: Verify the JAR file exists
    - name: Check JAR file
      run: |
        if [ ! -f "target/springbootApp.jar" ]; then
          echo "Error: target/springbootApp.jar not found!"
          exit 1
        fi

    # Step 5: Log in to Azure
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 6: Log in to Azure Container Registry (ACR)
    - name: Log in to ACR
      run: az acr login --name ${{ secrets.ACR_NAME }}

    # Step 7: Build the Docker image and tag it
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:${{ github.sha }} .
        docker tag ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:${{ github.sha }} ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:latest

    # Step 8: Push the Docker image to ACR
    - name: Push Docker image to ACR
      run: |
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:latest
